Докер хаб:
https://hub.docker.com/



Помощь:
docker <команда> --help



Докер образы:
docker images               - список доступных образов
docker pull <image>         - загрузить образ с hub.docker
docker image rm <image_id>  - удалить образ



Запуск образа в контейнере:
docker run -it --rm --name <containev_name> <image_id>  - запустить контейнер из образа
run                             - запускает контейнер
-it                             - в интерактивном режиме
--rm                            - удалить, после выключения
--name                          - задать имя контейнеру
<containev_name>                - имя контейнера (берется из головы)
<image_id>                      - id образа. Также тут можно указать <REPOSITORY:TAG> (если TAG не указан, по-умолчанию ставится latest)



Работа с контейнером:
docker ps                       - список запущенных контейнеров
docker ps -a                    - список ВСЕХ контейнеров
docker stop <CONTAINER ID>      - остановить контейнер
docker start <CONTAINER ID>     - запустить контейнер контейнер
docker pause <container_id>     - ставит контейнер на паузу
docker unpause <container_id>   - снимает контейнер с паузы
docker kill <container_id>      - принудительно остановить контейнер
docker rm <CONTAINER ID>        - удалить контейнер
* Везде вместо <CONTAINER ID> можно подставить имя контейнера 



Продвинутая работа с контейнером:
docker run -it --rm --name <containev_name> -v <путь_на_хосте>:<путь_в_контейнере> -w <рабочая_директория> <image_id> <команда>
-v                              - монтирования томов (volumes) внутрь контейнера Docker. 
                                    Этот флаг позволяет связывать каталоги или файлы между хост-системой и контейнером, 
                                    что позволяет сохранять данные даже после остановки или удаления контейнера.
-w                              - Флаг -w в команде docker run используется для установки текущей рабочей директории (working directory) 
                                    внутри контейнера. Это означает, что при запуске процесса в контейнере, 
                                    он будет выполняться в указанной рабочей директории. 
Пример:
docker run -it --rm --name my-running-script -v "$PWD":/usr/src/myapp -w /usr/src/myapp python:3 python script_hello_world.py



Проброс команд в контейнер
docker exec -it <containev_name> <команда>



Копирование файлов:
Копирование файлов с хост-системы в контейнер:
docker cp <локальный_файл_или_директория> <ID_или_имя_контейнера>:<путь_в_контейнере>

Копирование файлов из контейнера на хост-систему:
docker cp <ID_или_имя_контейнера>:<путь_в_контейнере> <локальная_директория>

Копирование файлов между контейнерами:
docker cp <ID_или_имя_исходного_контейнера>:<путь_в_исходном_контейнере> <ID_или_имя_целевого_контейнера>:<путь_в_целевом_контейнере>
