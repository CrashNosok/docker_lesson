Dockerfile — это текстовый файл, который содержит инструкции для создания Docker образа. 
Docker образ является снимком файловой системы и параметров выполнения для определенного приложения.

Название должно начинаться с "Dockerfile"



Синтаксис Dockerfile:
# Используем базовый образ
FROM python:3.11-slim

# Установка необходимых пакетов
RUN apt-get update && apt-get install -y \
    package1 \
    package2 \
    && rm -rf /var/lib/apt/lists/*

# Определение рабочей директории
WORKDIR /app

# Копирование локальных файлов в образ
COPY local-files /app

# Установка переменной среды
ENV MY_ENV_VARIABLE=my_value

# Открытие портов
EXPOSE 80

# Запуск команды при запуске контейнера
CMD [ "python", "./script.py" ]

FROM    - Задает базовый образ, который будет использоваться для создания вашего образа. 
            В приведенном примере используется образ python:3.11-slim.
RUN     - Выполняет команды внутри контейнера во время создания образа. 
            В данном случае, обновляется список пакетов и устанавливаются необходимые пакеты.
WORKDIR - Задает текущую рабочую директорию для всех последующих инструкций. 
            В данном случае, устанавливается рабочая директория /app.
COPY    - Копирует файлы или директории из локальной файловой системы в образ. 
            В данном случае, копируются файлы из директории local-files внутрь образа в директорию /app.
ENV     - Устанавливает переменные среды. В данном случае, создается переменная MY_ENV_VARIABLE со значением my_value.
EXPOSE  - Документирует то, что контейнер будет слушать указанный сетевой порт во время выполнения. 
            Не фактически открывает порт, но предоставляет информацию для разработчиков или системных администраторов.
CMD     - Задает команду, которая будет выполнена при запуске контейнера. В данном случае, запускается скрипт "python ./script.py"



docker build -t <app_name> <path_to_dockerfile>
построить образ
-t          - позволяет указать имя образа. <app_name> указывается без спец. символов и без верхнего регистра
--no-cache  - не использовать кэш при сборке образа, что полезно, например, при обновлении зависимостей в вашем приложении
